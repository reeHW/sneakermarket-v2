# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

env:  
  S3_BUCKET_NAME: sneakermarket-build 
  PROJECT_NAME: sneakermarket-v2
  CODE_DEPLOY_APP_NAME: sneakermarket                   
  CODE_DEPLOY_GROUP_NAME: sneakermarket-group

name: deploy # GitHub Action에서 보여질 이름을 지정. 

on:
  release:
    types: [push] # push시 자동으로 실행.
  push:
    branches: [master] # master 브랜치에서 동작.
  workflow_dispatch: # 수동으로도 실행이 가능.
  
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout 
      uses: actions/checkout@v3  # 프로젝트 코드를 CheckOut    
      
    - name: Set up JDK 11 
      uses: actions/setup-java@v3  
      with:
        java-version: '11' 
        distribution: 'temurin' 
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew 
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean build -x test
      shell: bash

    - name: Get current time
      uses: 1466587594/get-current-time@v2 
      id: current-time
      with:
        format: YYYY-MM-DDTHH-mm-ss 
        utcOffset: "+09:00"

    - name: Show Current Time
      run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
      shell: bash

    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip .        
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1      
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./deploy/$PROJECT_NAME.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$PROJECT_NAME.zip  

    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODE_DEPLOY_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$PROJECT_NAME.zip 
